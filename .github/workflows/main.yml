name: build
on:
  push:
    branches:
      - v0.0
  pull_request:
jobs:
  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: "Image build and signed"
          SLACK_MESSAGE: |
            Name: gengyanrui
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          severity: 'HIGH'
          format: 'table'
          output: 'report.txt'
          exit: 1

      - name: upload to slack
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: xoxb-5828957891927-5846920816146-5dQH9p6n4UnQaHvN825dISuD
          content: 'file content'
          file_type: 'text.txt'
          file_name: 'report.txt'
          title: 'failed scan'

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: gengyanrui
          password: gyr520419

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: gengyanrui/app:latest

name: build-image
runs-on: ubuntu-latest
steps:
  - uses: actions/checkout@v3.5.2
    with:
      fetch-depth: 1

  - name: Install Cosign
    uses: sigstore/cosign-installer@v3.1.1

  - name: Set up QEMU
    uses: docker/setup-qemu-action@v2.1.0

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v2.5.0

  - name: Login to GitHub Container Registry
    uses: docker/login-action@v2.1.0
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      password: ${{ secrets.GITHUB_TOKEN }}

  - id: docker_meta
    uses: docker/metadata-action@v4.4.0
    with:
      images: ghcr.io/sigstore/sample-honk
      tags: type=sha,format=long

  - name: Build and Push container images
    uses: docker/build-push-action@v4.0.0
    id: build-and-push
    with:
      platforms: linux/amd64,linux/arm/v7,linux/arm64
      push: true
      tags: ${{ steps.docker_meta.outputs.tags }}

  - name: Sign image with a key
    run: |
      cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
    env:
      TAGS: ${{ steps.docker_meta.outputs.tags }}
      COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
      COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      DIGEST: ${{ steps.build-and-push.outputs.digest }}

  - name: Sign the images with GitHub OIDC Token
    env:
      DIGEST: ${{ steps.build-and-push.outputs.digest }}
      TAGS: ${{ steps.docker_meta.outputs.tags }}
    run: cosign sign --yes "${TAGS}@${DIGEST}"
